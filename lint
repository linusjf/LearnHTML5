#!/usr/bin/env -S bash
require() {
  hash "$@" || exit
}

# shellcheck disable=SC2317
# Don't warn about unreachable commands in this function
handle_error() {
  # Get information about the error
  local error_code=$?
  local error_command="$BASH_COMMAND"
  # Log the error details
  echo -e "${RED}An error occurred at ${error_command} (exit code: ${error_code})${ENDCOLOR}"
  exit "$error_code"
}

# shellcheck disable=SC2317
# Don't warn about unreachable commands in this function
ctrl_c() {
  # Get information about the error
  local error_code=$?
  local error_command="$BASH_COMMAND"
  echo -e "${RED}Script interrupted at ${error_command} (exit code: ${error_code})${ENDCOLOR}"
  exit 1
}

set -e
set -o pipefail
set -u
trap "handle_error" ERR
trap "ctrl_c" INT
require date htmlhint stylelint prettier tidy find parallel colorguard html-validate js-beautify nproc
start=$(date +%s)
RED="\e[31m"
GREEN="\e[32m"
ENDCOLOR="\e[0m"
echo -e "${GREEN}Starting...${ENDCOLOR}"
declare -i SUCCESS=0
declare -i STYLE_SUCCESS=0
declare -r configFileName="tidy.config"
declare -i PROCS=$(($(nproc) - 1))
files=$(find . -type f -name "*.css" ! -name "*.scss.css" ! -name "*.sass.css" \
  ! -path "**/.git/**" ! -path "**/node_modules/**")
echo -e "${GREEN}Executing colorguard...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    colorguard --file % --allow-equivalent-notation
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
echo -e "${GREEN}Executing prettier for css...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    prettier --cache --parser css --write %
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
files=$(find . -type f -name "*.css" ! -name "*.scss.css" ! -name "*.sass.css" ! -name "tw-*.css" \
  ! -path "**/.git/**" ! -path "**/node_modules/**")
echo -e "${GREEN}Executing stylelint for css...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    stylelint % --color --fix --quiet-deprecation-warnings
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
files=$(find . -type f -name "*.scss" \
  ! -path "**/.git/**" ! -path "**/node_modules/**" ! -path "**/*tailwind.css")
echo -e "${GREEN}Executing prettier for scss...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    prettier --cache --parser scss --write %
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
echo -e "${GREEN}Executing stylelint for scss...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    stylelint % --color --fix --quiet-deprecation-warnings
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
files=$(find . -maxdepth 2 -type f -name "*.html" \
  ! -path "**/.git/**")
echo -e "${GREEN}Executing tidy...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    ./wraptidy -config "$configFileName" -quiet -modify %
SUCCESS=$((SUCCESS + $?))
echo -e "${GREEN}Executing prettier for html...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    prettier --cache --parser html --write %
SUCCESS=$((SUCCESS + $?))
echo -e "${GREEN}Executing htmlhint...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    htmlhint --config .htmlhintrc -f compact % 2>/dev/null
SUCCESS=$?
echo -e "${GREEN}Executing html-validate...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    html-validate --formatter stylish %
SUCCESS=$((SUCCESS + $?))
files=$(find . -type f -name "*.js" \
  ! -path "**/.git/**" ! -path "**/node_modules/**" ! -path "**/*tailwind.css")
echo -e "${GREEN}Executing js-beautify for js...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    js-beautify -r %
SUCCESS=$((SUCCESS + $?))
files=$(find . -type f -name "*.scss" ! -name "_*.scss" \
  ! -path "**/.git/**" ! -path "**/node_modules/**" ! -path "**/*tailwind.css")
echo -e "${GREEN}Executing sass for scss...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I@ \
    ./runsass @
SUCCESS=$((SUCCESS + $?))
files=$(find . -type f -name "*.sass" \
  ! -path "**/.git/**" ! -path "**/node_modules/**" ! -path "**/*tailwind.css")
echo -e "${GREEN}Executing sass for sass...${ENDCOLOR}"
echo "$files" |
  parallel -j "$PROCS" -I% \
    ./runsass %
SUCCESS=$((SUCCESS + $?))
echo -e "${GREEN}Executing prettier for svg...${ENDCOLOR}"
prettier --cache --parser html --write -- **/*.svg
SUCCESS=$((SUCCESS + $?))
end=$(date +%s)
echo -e "${GREEN}Execution time: $((end - start)) seconds.${ENDCOLOR}"
exit $((SUCCESS + STYLE_SUCCESS))
