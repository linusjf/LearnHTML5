#!/usr/bin/env bash
require() {
  hash "$@" || exit
}
require htmlhint stylelint prettier tidy find parallel head colorguard
declare -i SUCCESS=0
declare -i CSS_SUCCESS=0
declare -r configFileName="tidy.config"
configFilePath="$(find . -maxdepth 2 \
  -type f -name "$configFileName" ! -path \
  "**/.git/**" | head -n 1)"
files=$(find . -type f -name "*.css" \
  ! -path "**/.git/**" ! -path "**/node_modules/**" ! -path "**/*tailwind.css")
echo "Executing stylelint..."
echo "$files" |
  parallel -j 5 -I% \
    stylelint % --fix --quiet-deprecation-warnings
STYLE_SUCCESS=$((CSS_SUCCESS + $?))
echo "Executing prettier..."
echo "$files" |
  parallel -j 5 -I% \
    prettier --parser css --write %
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
echo "Executing colorguard..."
echo "$files" |
  parallel -j 5 -I% \
    colorguard --file % --allow-equivalent-notation
STYLE_SUCCESS=$((STYLE_SUCCESS + $?))
files=$(find . -maxdepth 2 -type f -name "*.html" \
  ! -path "**/.git/**")
echo "Executing htmlhint..."
echo "$files" |
  parallel -j 5 -I% \
    htmlhint --config .htmlhintrc -f compact % 2>/dev/null
SUCCESS=$?
echo "Executing html-validate..."
echo "$files" |
  parallel -j 5 -I% \
    html-validate %
SUCCESS=$((SUCCESS + $?))
if [[ $SUCCESS == 0 ]]; then
  echo "Executing tidy..."
  echo "$files" |
    parallel -j 5 -I% \
      tidy -config "$configFilePath" -quiet -m %
  SUCCESS=$((SUCCESS + $?))
fi
exit $((SUCCESS + STYLE_SUCCESS))
