.alert {
  // The parent selector can be used to add pseudo-classes to the outer
  // selector.
  &:hover {
    font-weight: bold;
  }
  // It can also be used to style the outer selector in a certain context, such
  // as a body set to use a right-to-left language.
  [dir="rtl"] & {
    margin-left: 0;
    margin-right: 0.625rem;
    direction: rtl;
  }
  // You can even use it as an argument to pseudo-class selectors.
  :not(&) {
    opacity: 0.8;
  }
}

.accordion {
  max-width: 37.5rem;
  margin: 4rem auto;
  width: 90%;
  font-family: Raleway, sans-serif;
  background: #f4f4f4;

  &__copy {
    display: none;
    padding: 1rem 1.5rem 2rem;
    color: gray;
    line-height: 1.6;
    font-size: 0.875rem;
    font-weight: 500;

    &--open {
      display: block;
    }
  }
}

.main aside:hover,
.sidebar p {
  parent-selector: &;
  // => ((unquote(".main") unquote("aside:hover")),
  //     (unquote(".sidebar") unquote("p")))
}

@mixin app-background($color) {
  #{if(&, '&.app-background', '.app-background')} {
    background-color: $color;
    color: rgb(255 255 255 / 75%);
  }
}

@include app-background(#036);

.sidebar {
  @include app-background(#c6538c);
}
